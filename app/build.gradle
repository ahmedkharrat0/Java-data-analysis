/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id 'java'
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/releases/' }  // Add this repository for Tribuo

}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    implementation 'org.apache.spark:spark-core_2.12:3.4.0'
    implementation 'org.apache.spark:spark-sql_2.12:3.4.0'
    implementation 'org.postgresql:postgresql:42.5.0'
    implementation 'org.jfree:jfreechart:1.5.3'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'org.knowm.xchart:xchart:3.8.0'
    implementation 'nz.ac.waikato.cms.weka:weka-dev:3.9.6'




}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.example.DataAnalysisPrj.App'
}

tasks.withType(JavaExec) {
    args = ['arg1', 'arg2'] // Add runtime arguments if needed
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
